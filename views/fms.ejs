<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/images/ARNG.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <title>Home</title>
    <style>
      .form-group {
        margin:10px;
      }

      .content
      {
        max-width: 1000px;
        margin: auto;
      }

    </style>
</head>
<body>
<%- include('header') %>
<div class="content">
  <h2>Functional Movement Screening</h2>
  <p>
    For each movement, enter a value from 0 (pain with movement) to 3 (perfect form).
  </p>
  <form method="post" action="/fms/submit">
    <div class="form-group">
      <label for="fms_grader">Grader's Name:</label>
      <input type="text" id="fms_grader" name="fms_grader" class="form-control" required>
    </div>
    <h3>These are all FMS tests:</h3>
    <div class="row mb-3">
      <label for="deep_squat" class="col-sm-4 col-form-label">Deep Squat:</label>
      <div class="col-sm-8">
        <input type="number" id="deep_squat" name="deep_squat" min="0" max="3" class="form-control" required>
      </div>
    </div>
    <div class="row mb-3">
      <label for="hurdle_step" class="col-sm-4 col-form-label">Hurdle Step:</label>
      <div class="col-sm-8">
        <input type="number" id="hurdle_step" name="hurdle_step" min="0" max="3" class="form-control" required>
      </div>
    </div>
    <div class="row mb-3">
      <label for="inline_lunge" class="col-sm-4 col-form-label">Inline Lunge:</label>
      <div class="col-sm-8">
        <input type="number" id="inline_lunge" name="inline_lunge" min="0" max="3" class="form-control" required>
      </div>
    </div>
    <div class="row mb-3">
      <label for="shoulder_mobility" class="col-sm-4 col-form-label">Shoulder Mobility:</label>
      <div class="col-sm-8">
        <input type="number" id="shoulder_mobility" name="shoulder_mobility" min="0" max="3" class="form-control" required>
      </div>
    </div>
    <div class="row mb-3">
      <label for="active_straight_leg_raise" class="col-sm-4 col-form-label">Active Straight Leg Raise:</label>
      <div class="col-sm-8">
        <input type="number" id="active_straight_leg_raise" name="active_straight_leg_raise" min="0" max="3" class="form-control" required>
      </div>
    </div>
    <div class="row mb-3">
      <label for="trunk_stability_pushup" class="col-sm-4 col-form-label">Trunk Stability Pushup:</label>
      <div class="col-sm-8">
        <input type="number" id="trunk_stability_pushup" name="trunk_stability_pushup" min="0" max="3" class="form-control" required>
      </div>
    </div>
    <div class="row mb-3">
      <label for="rotary_stability" class="col-sm-4 col-form-label">Rotary Stability:</label>
      <div class="col-sm-8">
        <input type="number" id="rotary_stability" name="rotary_stability" min="0" max="3" class="form-control" required>
      </div>
    </div>
    <p id="score">FMS Score: _______/21</p>

    <input type="submit" value="Submit">
  </form>
</div>

<style>
  form div {
    display: inline-block;
    margin-right: 10px;
  }
</style>

<script>
  // Select input elements and the total motivation score element
  const fmsDATA = [
    document.getElementById("deep_squat"),
    document.getElementById("hurdle_step"),
    document.getElementById("inline_lunge"),
    document.getElementById("shoulder_mobility"),
    document.getElementById("active_straight_leg_raise"),
    document.getElementById("trunk_stability_pushup"),
    document.getElementById("rotary_stability")
  ];
  
  const totalFMS = document.getElementById("score");

  // Update the total motivation score
  function finalFMS_Score() {
    let totalScore = 0;
    for (const input of fmsDATA) {
      totalScore += parseInt(input.value) || 0;
    }
    totalFMS.textContent = `FMS Score: ${totalScore}/21`;
  }
  
  
  // Attach event listeners to input elements
  for (const input of fmsDATA) {
    input.addEventListener("input", finalFMS_Score);
  }
  
</script>
